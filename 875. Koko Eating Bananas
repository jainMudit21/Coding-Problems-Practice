URL: https://leetcode.com/problems/koko-eating-bananas/

class Solution {
    public int minEatingSpeed(int[] piles, int h) {
        int max = getMax(piles);
        
        int lo = 0;
        int hi = max;
        int speed = max;
        
        while(lo <= hi) {
            int mid = lo + (hi - lo)/2;
            
            if(isValid(piles, mid, h)) {
                speed = mid;
                hi = mid - 1;
            }else {
                lo = mid + 1;
            }
        }
        
        return speed;
    }
    
    private int getMax(int[] arr) {
        int max = arr[0];
        for(int x: arr) {
            max = Math.max(max, x);
        }
        return max;
    }
    private boolean isValid(int[] arr, int spd, int hr) {
        
        for(int i=0; i < arr.length; i++) {
            
            hr -= (int) (Math.ceil((arr[i]*1.0)/spd));
            if(hr < 0) {
                return false;
            }
        }
        return true;
    }
}
