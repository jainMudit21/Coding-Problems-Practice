URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/dynamic-programming/rod-cutting-official/ojquestion#

import java.io.*;
import java.util.*;

public class Main {

  public static int solution(int[] prices) {
    // write your code here
    int n = prices.length;
    int np[] = new int[n+1];
    
    for(int i = 0; i < n; i++) {
        np[i+1] = prices[i];
    }
    
    int dp[] = new int[n+1];
    for(int i= 0; i < n+1; i++) {
        dp[i] = np[i];
        
        int li = 1;
        int ri = i-1;
        while(li <= ri) {
            dp[i] = Math.max(dp[i], dp[li]+dp[ri]);
            li++;
            ri--;
        }
    }
    
    return dp[n];
  }

  public static void main(String[] args) {
    Scanner scn = new Scanner(System.in);
    int n = scn.nextInt();
    int[] prices = new int[n];
    for (int i = 0; i < n; i++) {
      prices[i] = scn.nextInt();
    }
    System.out.println(solution(prices));
  }

}
