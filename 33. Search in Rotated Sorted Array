URL: https://leetcode.com/problems/search-in-rotated-sorted-array/

URL: https://www.interviewbit.com/problems/rotated-sorted-array-search/

URL: https://practice.geeksforgeeks.org/problems/search-in-a-rotated-array4618/1#

class Solution {
    public int search(int[] arr, int target) {
        int lo = 0;
        int hi = arr.length - 1;
        
        while(lo <= hi) {
            int mid = lo + (hi - lo)/2;
            
            if(arr[mid] == target) {
                return mid;
            }else if(arr[mid] >= arr[lo]) {
                //lo to mid part is sorted
                if(target >= arr[lo] && target < arr[mid]) {
                    hi = mid - 1;
                }else {
                    lo = mid + 1;
                }
            }else if(arr[mid] <= arr[hi]) {
                //mid to hi part is sorted
                if(target > arr[mid] && target <= arr[hi]) {
                    lo = mid + 1;
                }else {
                    hi = mid - 1;
                }
            }
        }
        
        return -1;
    }
}
