URL: https://practice.geeksforgeeks.org/problems/largest-sum-subarray-of-size-at-least-k/0#

import java.util.*;
import java.lang.*;
import java.io.*;
class GFG
 {
	public static void main (String[] args) throws IOException
	 {
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    int t = Integer.parseInt(br.readLine());
	    while(t-->0) {
	        int n = Integer.parseInt(br.readLine());
	        String line = br.readLine();
	        String strs[] = line.trim().split("\\s+");
	        int arr[] = new int[n];
	        for(int i=0;i<n;i++)
	            arr[i] = Integer.parseInt(strs[i]);
	        int k = Integer.parseInt(br.readLine());
	        
	        System.out.println(atleastK(arr, k));
	    }
	 }
	 
	 public static int atleastK(int arr[], int k) {
	    int bestSum[] = new int[arr.length];
        int currentBest = Integer.MIN_VALUE;
        for(int i=0; i < arr.length; i++) {
            if(currentBest < 0) 
                currentBest = arr[i];
            else 
                currentBest += arr[i];
            
            bestSum[i] = currentBest;
        }
        
        int overallBest = Integer.MIN_VALUE;
        currentBest = 0;
        
        for(int i=0; i < k; i++) {
            currentBest += arr[i];
        }
        overallBest = currentBest;
        
        for(int i=k; i< arr.length; i++) {
            currentBest += arr[i];
            currentBest -= arr[i-k];
            
            overallBest = Math.max(overallBest, currentBest);
            overallBest = Math.max(overallBest, currentBest + bestSum[i-k]);
        }
        

        return overallBest;
	 }
}
