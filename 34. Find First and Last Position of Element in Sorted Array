URL: https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/

class Solution {
    public int[] searchRange(int[] arr, int target) {
        int ind = binary(arr, target, 0, arr.length - 1);
        if(ind == -1) {
            return new int[]{-1, -1};
        }
        
        int x = 0;
        int ei = ind;
        int left = 0;
        while((x = binary(arr, target, 0, ei)) != -1) {
            ei = x - 1;
            left = x;
        }
        int right = arr.length - 1;
        int si = ind;
        while((x = binary(arr, target, si, arr.length - 1)) != -1) {
            right = x;
            si = x + 1;
        }
        
        return new int[]{left, right};
    }
    
    int binary(int arr[], int key, int si, int ei) {
        
        while(si <= ei) {
            
            int mid = si + (ei - si)/2;
            
            if(arr[mid] == key) {
                return mid;
            }else if(arr[mid] > key) {
                ei = mid - 1;
            }else {
                si = mid + 1;
            }
        }
        
        return -1;
    }
}
