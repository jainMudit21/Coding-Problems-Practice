URL: https://leetcode.com/problems/basic-calculator-iii/

URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/stacks/basic-calculator-3-official/ojquestion

static class Pair {
    Stack<Integer> st;
    char sign;
    Pair(Stack<Integer> s, char si) {
        st = s;
        sign = si;
    }
    
}

public static void cal(Stack<Integer> st, int val, char sign) {
    if(sign == '+') {
        st.push(val);
    }else if(sign == '-') {
        st.push(-val);
    }else if(sign == '*') {
        int oprnd = st.pop();
        st.push(oprnd * val);
    }else if(sign == '/') {
        int oprnd = st.pop();
        st.push(oprnd / val);
    }
}

    
public static int calculate(String s) {
    
    Stack<Pair> stP = new Stack<>();

    Stack<Integer> st = new Stack<>();
    char sign = '+';
    
    for(int i=0; i < s.length(); i++) {
        
        char ch = s.charAt(i);
        
        if(Character.isDigit(ch)) {
            int val = 0;
            while(i < s.length() && Character.isDigit(s.charAt(i))) {
                val = val * 10 + (s.charAt(i) - '0');
                i++;
            }
            i--;
            cal(st, val, sign);
            
        }else if(ch == '(') {
            stP.push(new Pair(st, sign));
            sign = '+';
            st = new Stack<>();
            
        }else if(ch == ')') {
            int val = 0;
            while(st.size() > 0) {
                val += st.pop();
            }
            
            Pair p = stP.pop();
            st = p.st;
            sign = p.sign;
            
            cal(st, val, sign);
        }
        else if(ch != ' ') {
            sign = ch;
        }
    }
    
    int sum = 0;
    while(st.size() > 0) {
        sum += st.pop();
    }

    return sum;
}
