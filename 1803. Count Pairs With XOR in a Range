URL: https://leetcode.com/problems/count-pairs-with-xor-in-a-range/

class Solution {
    public int countPairs(int[] nums, int low, int high) {
      Node root = new Node();
      
      int count = 0;
      for(int val: nums) {
          count += query(root, high, val, MAX_BIT);
          count -= query(root, low - 1, val, MAX_BIT);
          insert(root, val);
      }
      
      return count;
    }
    
    class Node {
      Node left, right;
      int count;
  }
  
  final int MAX_BIT = 14;
  void insert(Node root, int val) {
      
      for(int i = MAX_BIT; i >=0; i--) {
          int mask = 1 << i;
          int bit = (mask & val) > 0 ? 1 : 0;
          
          if(bit == 0) {
              if(root.left == null)
                root.left = new Node();
              root = root.left;
          }else {
              if(root.right == null)
                root.right = new Node();
              root = root.right;
          }
          root.count++;
      }
  }
  
  int query(Node root, int high, int val, int index) {
      if(root == null)  return 0;
      
      if(index == -1)   return getCount(root);
      
      
      int mask = 1 << index;
      
      int bitV = (mask & val) > 0 ? 1 : 0;
      int bitH = (mask & high) > 0 ? 1 : 0;
      
      if(bitV == 0) {
          if(bitH == 0) {
              return query(root.left, high, val, index - 1);
          }else {
              return getCount(root.left) + query(root.right, high, val, index - 1);
          }
      }else {
          if(bitH == 0) {
              return query(root.right, high, val, index - 1);
          }else {
              return query(root.left, high, val, index - 1) + getCount(root.right);
          }
      }
  }
  
  int getCount(Node node) {
      return (node == null) ? 0 : node.count;
  }
}
