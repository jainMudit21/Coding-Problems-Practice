URL: https://leetcode.com/problems/powx-n/

class Solution {
    public double myPow(double x, int n) {
        // Fast Power Algorithm O(logn)
        // Binary representation of n
        
        long N = n; // n can be -2^31
        if (n < 0) {
            N = -N;
        }
        double ans = 1.0;
        for (long i = N; i > 0;) {
            if ((i & 1) != 0) {
                ans *= x;
                i = i - 1;
            }else {
                x = x * x;
                i = i/2;
            }
        }
        if (n<0) ans = 1 / ans;
        return ans;
    }
}
