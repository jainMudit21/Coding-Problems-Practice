URL: https://leetcode.com/problems/complete-binary-tree-inserter/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class CBTInserter {

    Queue<TreeNode> q = new LinkedList<>();
    TreeNode head = null, nip = null;
    
    public CBTInserter(TreeNode root) {
        head = root;
        q.add(root);
        
        while(true) {
            TreeNode top = q.peek();
            if(top.left != null) {
                q.add(top.left);
            }else {
                nip = top;
                break;
            }
            
            if(top.right != null) {
                q.add(top.right);
            }else {
                nip = top;
                break;
            }
            
            q.poll();
        }
    }
    
    public int insert(int val) {
        int ans = nip.val;
        TreeNode node = new TreeNode(val);
        if(nip.left == null) {
            nip.left = node;
        }else {
            nip.right = node;
            q.poll();
            nip = q.peek();
        }
        q.add(node);
        
        return ans;
    }
    
    public TreeNode get_root() {
        return head;
    }
}

/**
 * Your CBTInserter object will be instantiated and called as such:
 * CBTInserter obj = new CBTInserter(root);
 * int param_1 = obj.insert(val);
 * TreeNode param_2 = obj.get_root();
 */
