URL: https://leetcode.com/problems/dot-product-of-two-sparse-vectors/

class SparseVector {
    
    HashMap<Integer, Integer> nonZeroData;
    SparseVector(int[] nums) {
        nonZeroData = new HashMap<>();
        for(int i=0; i < nums.length; i++) {
            if(nums[i] != 0) {
                nonZeroData.put(i, nums[i]);
            }
        }
    }
    
	// Return the dotProduct of two sparse vectors
    public int dotProduct(SparseVector vec) {
        int sum = 0;
        //further optimization: choose hashmap having smaller size
        for(int key: vec.nonZeroData.keySet()) {
            if(this.nonZeroData.containsKey(key)) {
                sum += (vec.nonZeroData.get(key) * this.nonZeroData.get(key));
            }
        }
        return sum;
    }
}

// Your SparseVector object will be instantiated and called as such:
// SparseVector v1 = new SparseVector(nums1);
// SparseVector v2 = new SparseVector(nums2);
// int ans = v1.dotProduct(v2);
