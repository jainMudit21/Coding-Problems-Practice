URL: https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/

class Solution {
    public int shipWithinDays(int[] arr, int days) {
        int sum = 0;
        int max = 0;
        for(int x: arr) {
          sum += x;
          max = Math.max(max, x);
        }

        int lo = max;
        int hi = sum;
        int ans = 0;

        while(lo <= hi) {
          int mid = lo + (hi - lo) / 2;

          if(isPossible(arr, mid, days)) {
              ans = mid;
              hi = mid - 1;
          }else {
              lo = mid + 1;
          }
        }

        return ans;
    }
    
    boolean isPossible(int[]arr, int ans, int days) {

      int day = 1;
      int sum = 0;
      for(int i=0; i < arr.length; i++) {
          sum += arr[i];
          if(sum > ans) {
              sum = arr[i];
              day++;
          }
      }

      return day <= days;

    }
}
