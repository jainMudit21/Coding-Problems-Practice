URL: https://leetcode.com/problems/single-number-ii/

class Solution {
    public int singleNumber(int[] arr) {
        int tn = -1, tnp1 = 0, tnp2 = 0; //variables 3n, 3n+1, 3n+2
        
        for(int i=0; i< arr.length; i++) {
            int cwtn = tn & arr[i]; //common bits in 3n and arr[i]
            int cwtnp1 = tnp1 & arr[i]; //common bits in 3n+1 and arr[i]
            int cwtnp2 = tnp2 & arr[i]; //common bits in 3n+2 and arr[i]
            
            tn = tn & (~cwtn); //switching off common bits in tn
            tnp1 = tnp1 | cwtn; //switching on common bits in tnp1
            
            tnp1 = tnp1 & (~cwtnp1); //switching off common bits in tnp1
            tnp2 = tnp2 | cwtnp1;//switching on common bits in tnp2
            
            tnp2 = tnp2 & (~cwtnp2); //switching off common bits in tnp2
            tn = tn | cwtnp2;//switching on common bits in tn
        }
        
        return (tnp1);
    }
}
