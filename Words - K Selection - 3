URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/recursion-and-backtracking/words-kselection-3-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {

  public static void generateSelection(int cc, String ustr, int ssf, int ts, HashMap<Character, Integer> unique, String asf) {
      if(ssf > ts) {
          return;
      }
      
      if(ssf == ts) {
          System.out.println(asf);
          return;
      }
      
      if(cc == ustr.length()) {
          return;
      }
      
      char ch = ustr.charAt(cc);
      for(int i = unique.get(ch); i>=0; i--) {
          
          String part = "";
          for(int k=0; k < i; k++) {
              part += ch;
          }
          
          generateSelection(cc + 1, ustr, ssf + i, ts, unique, asf + part);
      }
      
  }

  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String str = br.readLine();
    int k = Integer.parseInt(br.readLine());

    HashMap<Character, Integer> unique = new HashMap<>();
    String ustr = "";
    for (char ch : str.toCharArray()) {
      if (unique.containsKey(ch) == false) {
        unique.put(ch, 1);
        ustr += ch;
      } else {
        unique.put(ch, unique.get(ch) + 1);
      }
    }

    generateSelection(0, ustr, 0, k, unique, "");
  }

}
