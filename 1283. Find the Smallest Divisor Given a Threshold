URL: https://leetcode.com/problems/find-the-smallest-divisor-given-a-threshold/

class Solution {
    public int smallestDivisor(int[] nums, int th) {
        int max = getMax(nums);
        
        int lo = 1;
        int hi = max;
        int div = max;
        
        while(lo <= hi) {
            int mid = lo + (hi - lo)/2;
            
            if(isValid(nums, mid, th)) {
                div = mid;
                hi = mid - 1;
            }else {
                lo = mid + 1;
            }
        }
        
        return div;
    }
    
    private int getMax(int[] arr) {
        int max = arr[0];
        for(int x: arr) {
            max = Math.max(max, x);
        }
        return max;
    }
    
    private boolean isValid(int[] arr, int div, int th) {
        
        int divSum = 0;
        for(int i=0; i < arr.length; i++) {
            
            divSum += (int) (Math.ceil((arr[i]*1.0)/div));
        }
        return divSum <= th;
    }
}
