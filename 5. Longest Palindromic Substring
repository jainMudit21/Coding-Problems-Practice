URL: https://leetcode.com/problems/longest-palindromic-substring/


class Solution {
    public String longestPalindrome(String s) {
        int n = s.length();
        int max =-1;
        int start=0;
        int end = 0;
        boolean dp[][] = new boolean[n][n];
        
        for(int gap = 0; gap < n; gap++) {
            for(int i=0,j=gap; j < n; j++, i++) {
                
                if(gap == 0) {
                    dp[i][j] = true;
                }else if(gap == 1) {
                    dp[i][j] = s.charAt(i) == s.charAt(j);
                }else {
                    if(s.charAt(i) == s.charAt(j) && dp[i+1][j-1]) {
                        dp[i][j] = true;
                    }else {
                        dp[i][j] = false;
                    }
                }
                
                if(dp[i][j]) {
                    if(max < gap) {
                        max = gap;
                        start = i;
                        end = j;
                    }
                    
                }
            }
        }
        
        return s.substring(start, end+1);
      
    }
}
