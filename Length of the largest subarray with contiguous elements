URL: https://www.geeksforgeeks.org/length-largest-subarray-contiguous-elements-set-2/

//For running submissions
URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/hashmap-and-heaps/largest-subarray-with-contiguous-elements-official/ojquestion

import java.util.*;

public class Main {

	public static int solution(int[] arr) {
		int lmax = 0;
		
		for(int i=0; i < arr.length-1; i++) {
		    int min = arr[i];
		    int max = arr[i];
		    HashSet<Integer> hs = new HashSet<>();
		    hs.add(arr[i]);
		    
		    for(int j=i+1; j < arr.length; j++) {
		        if(hs.contains(arr[j])) {
		            break;
		        }
		        hs.add(arr[j]);
		        
		        min = Math.min(min, arr[j]);
		        max = Math.max(max, arr[j]);
		        
		        if(max - min == j - i) {
		            lmax = Math.max(lmax, j - i + 1);
		        }
		    }
		}
		
		return lmax;
	}
	
	
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int[] arr = new int[scn.nextInt()];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = scn.nextInt();
		}
		System.out.println(solution(arr));
	}

}
