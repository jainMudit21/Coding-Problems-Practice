URL: https://leetcode.com/problems/binary-tree-coloring-game/

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean btreeGameWinningMove(TreeNode root, int n, int x) {
        lc = rc = 0;
        count(root, x);
        
        int noOfNodesInParentExcludingx = n - (lc + rc + 1);
        
        int max = Math.max(lc, Math.max(rc, noOfNodesInParentExcludingx));
        
        return max > (n/2);
    }
    
    int lc, rc;
    
    int count(TreeNode root, int x) {
        if(root == null)
            return 0;
        
        int left = count(root.left, x);
        int right = count(root.right, x);
        
        if(root.val == x) {
            lc = left;
            rc = right;
        }
        
        return left + right + 1;
    }
}
