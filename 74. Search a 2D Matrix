URL: https://leetcode.com/problems/search-a-2d-matrix/

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int col = matrix[0].length;
        
        int lo = 0;
        int hi = matrix.length - 1;
        
        while(lo <= hi) {
            int mid = lo + (hi - lo)/2;
            
            if(target >= matrix[mid][0] && target <= matrix[mid][col-1]) {
                
                return binary(matrix[mid], target);
                
            }else if(target < matrix[mid][0]) {
                hi = mid - 1;
            }else {
                lo = mid + 1;
            }
        }
        
        return false;
    }
    
    boolean binary(int arr[], int key) {
        int si = 0;
        int ei = arr.length - 1;
        
        while(si <= ei) {
            int mid = si + (ei - si)/2;
            
            if(arr[mid] == key) {
                return true;
            }else if(arr[mid] > key){
                ei = mid - 1;
            }else {
                si = mid + 1;
            }
        }
        
        return false;
    }
}
