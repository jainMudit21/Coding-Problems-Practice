 class CustomStack {

    int tos = -1;
    int size = 0;
    int arr[];
    public CustomStack(int maxSize) {
        arr = new int[maxSize];
        size = maxSize;
        tos = -1;
    }
    
    public void push(int x) {
        if(tos == size-1) {
            return;
        }
        
        arr[++tos] = x;
    }
    
    public int pop() {
        if(tos == -1) {
            return -1;
        }
        
        return arr[tos--];
    }
    
    public void increment(int k, int val) {
        if(tos < k) {
            for(int i = 0; i <= tos; i++) {
                arr[i] = arr[i] + val;
            }
        }else {
            for(int i = 0; i < k; i++) {
                arr[i] = arr[i] + val;
            }
        }
    }
}

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack obj = new CustomStack(maxSize);
 * obj.push(x);
 * int param_2 = obj.pop();
 * obj.increment(k,val);
 */



//new, updated, optimized solution added
class CustomStack {
    
    int value[];
    int increment[];
    int index;


    public CustomStack(int maxSize) {
        value = new int[maxSize];
        increment = new int[maxSize];
        index=-1;
    }
    
    public void push(int x) {
        if(index + 1 == value.length) 
            return;
        index++;
        value[index] = x;
        increment[index] = 0;
    }
    
    public int pop() {
        if(index < 0) {
            return -1;
        }

        int val = value[index];
        int inc = increment[index];
        index--;
        if(index >= 0)
            increment[index] += inc;

        return val + inc;
    }
    
    public void increment(int k, int val) {
        int ind = Math.min(k-1, index);
        if(ind >= 0) {
            increment[ind] += val;
        }
    }
}

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack obj = new CustomStack(maxSize);
 * obj.push(x);
 * int param_2 = obj.pop();
 * obj.increment(k,val);
 */
