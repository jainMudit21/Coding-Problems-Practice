URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/dynamic-programming/number-of-ways-of-triangulation-official/ojquestion#

import java.io.*;
import java.util.*;

public class Main {

	public static int solution(int n){
		// write your code here
		n = n-2;
		int dp[] = new int[n+1];
        dp[0] = dp[1] = 1;
        
        for(int i=2; i < dp.length; i++) {
            int ans = 0;
            for(int j = 0, k = i-1; j <= k; j++,k--) {
                if(j == k) {
                    ans += dp[j]*dp[j];
                    continue;
                }
                ans += 2*dp[j]*dp[k];
            }
            dp[i] = ans;
        }
        // System.out.println(Arrays.toString(dp));
        return (dp[n]);
		
	
	 }
	 
	public static void main(String[] args) {
		Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		System.out.println(solution(n));
	}

}
