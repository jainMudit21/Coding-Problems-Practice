URL: https://www.geeksforgeeks.org/tug-of-war/
 
URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/recursion-and-backtracking/tug-of-war-official/ojquestion#


import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) {
        Scanner scn = new Scanner(System.in);
        int[] arr = new int[scn.nextInt()];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = scn.nextInt();
        }
        solve(arr, 0, new ArrayList < > (), new ArrayList < > (), 0, 0);
        System.out.println(ans);
    }

    static int mindiff = Integer.MAX_VALUE;
    static String ans = "";

    public static void solve(int[] arr, int vidx, ArrayList<Integer> set1, ArrayList<Integer> set2, int sum1, int sum2) {
        //write your code here
        
        if(vidx == arr.length) {
            int delta = Math.abs(sum1 - sum2);
            if(delta < mindiff) {
                mindiff = delta;
                ans = set1 + " " + set2;
            }
            return;
        }
        
        
        if(set1.size() < (arr.length + 1)/2) {
            set1.add(arr[vidx]);
            solve(arr, vidx + 1, set1, set2, sum1 + arr[vidx], sum2);
            set1.remove(set1.size()-1); //backtracking necessity
        }
        
        
        if(set2.size() < (arr.length + 1)/2) {
            set2.add(arr[vidx]);
            solve(arr, vidx + 1, set1, set2, sum1, sum2 + arr[vidx]);
            set2.remove(set2.size()-1);
        }
        
    }

}
