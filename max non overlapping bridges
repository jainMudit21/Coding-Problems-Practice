URL: https://www.pepcoding.com/resources/data-structures-and-algorithms-in-java-levelup/dynamic-programming/max-non-overlapping-bridges-official/ojquestion

import java.io.*;
import java.util.*;

public class Main {

    public static void main(String[] args) throws Exception {
        // write your code here
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        Pair arr[] = new Pair[n];
        
        for(int i=  0; i < n; i++) {
            Pair p= new Pair(sc.nextInt(), sc.nextInt());
            arr[i] = p;
        }
        
        Arrays.sort(arr);
        
        //LIS on width
        int dp[] = new int[n];
        int ans = 0;
        for(int i = 0; i < n; i++) {
            int max = 0;
            for(int j = 0; j < i; j++) {
                if(arr[j].width < arr[i].width) {
                    max = Math.max(max, dp[j]);
                }
            }
            dp[i] = max == 0 ? 1: max+1;
            ans = Math.max(ans, dp[i]);
        }
        
        
        System.out.println(ans);
        
        
    }
    
    static class Pair implements Comparable<Pair> {
        int height;
        int width;
        
        public Pair(int x, int y) {
            height = x;
            width = y;
        }
        
        public int compareTo(Pair o) {
            if(this.height != o.height)
                return this.height - o.height;
            else
                return this.width - o.width;
        }
    }

}
