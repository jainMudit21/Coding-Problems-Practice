URL: https://leetcode.com/problems/arithmetic-slices-ii-subsequence/

class Solution {
    public int numberOfArithmeticSlices(int[] arr) {
        
        HashMap<Integer, Integer> maps[] = new HashMap[arr.length];
		for(int i=0; i < arr.length; i++) {
		    maps[i] = new HashMap<>();
		}
		
		int ans = 0;
		
		for(int i=1; i < arr.length; i++) {
		    
		    for(int j=0; j < i; j++) {
		        
		        long cd = (long)arr[i] - arr[j];
		        if(cd <= Integer.MIN_VALUE || cd >= Integer.MAX_VALUE) {
		            continue;
		        }
		        
		        int apsEndingOnJ = maps[j].getOrDefault((int)cd, 0);
		        int apsEndingOnI = maps[i].getOrDefault((int)cd, 0);
		        
		        ans += apsEndingOnJ;
		        
		        maps[i].put((int)cd, apsEndingOnI + apsEndingOnJ + 1);
		        
		    }
		}
		
		return ans;
    }
}
